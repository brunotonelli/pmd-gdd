<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>